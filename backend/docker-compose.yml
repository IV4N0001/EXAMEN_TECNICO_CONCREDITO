version: '3.8'

services:
  app:
    container_name: dockerized_backend
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=123
      - DB_DATABASE=todo_db
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=123
    ports:
      - "8000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: "npm run start:dev"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: todo_db
      MYSQL_USER: root
      MYSQL_PASSWORD: mint00
    ports:
      - "3307:3306" # Acceso externo opcional
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pmint00"]
      interval: 5s
      timeout: 10s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: 123
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672" # Interfaz web
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
  rabbitmq_data: